server:
  port: 8000
spring:
    application:
        name: gateway

    security:
        oauth2:
            client:
                registration:
                    keycloak:
                        client-id: springboot-oauth-spa
                        client-secret: PtsNuHhlGtnNidxPRdLUPS9DN6tKYiTQ
                        authorization-grant-type: authorization_code
                        redirect-uri: http://localhost:8000/login/oauth2/code/keycloak
                        scope: openid,profile
                provider:
                    keycloak:
                        issuer-uri: http://localhost:8080/realms/master
                        # authorization-uri: http://localhost:8080/auth/realms/master/protocol/openid-connect/auth
                        # token-uri: http://localhost:8080/auth/realms/master/protocol/openid-connect/token
                        # user-info-uri: http://localhost:8080/auth/realms/master/protocol/openid-connect/userinfo
                        # user-name-attribute: preferred_username

    cloud:
        gateway:
            server:
                webflux:
                    routes:
                        - id: resource
                          uri: http://localhost:9000
                          predicates:
                          - Path=/resource/**
                          filters:
                          - TokenRelay=
                       
            # resourceserver:
            #     jwt:
            #         issuer-uri: http://localhost:8080/realms/master
